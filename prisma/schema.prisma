generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum Nationality {
    THAI
    LAO
    JAPANESE
    US
    CANADIAN
    KOREAN
    VIETNAMESE
    UK
    GERMAN
    DUTCH
    OTHER
}

enum Gender {
    MR // นาย
    BOY //เด็กชาย
    MISS //นางสาว
    MRS // นาง
    GIRL //เด็กหญิง
}

enum Role {
    ADMIN
    STUDENT
    PARENT
}

enum ctype {
    SECONDARY1
    SECONDARY2
}



enum statustype {
    W8
    AGREE
    REJECT
}

model gender {
    gender_id   Int       @id @default(autoincrement())
    gender_type Gender
    student     student[]
    user        user[]
}

model religion {
    religion_id   Int       @id @default(autoincrement())
    religion_name String
    student       student[]
}

model nationality {
    nation_id   Int         @id @default(autoincrement())
    nation_name Nationality
    student     student[]
}

model Class {
    class_id   Int       @id @default(autoincrement())
    class_type ctype
    student    student[]

    @@map("class")
}

model major {
    major_id   Int       @id @default(autoincrement())
    major_type String
    student    student[]
}

model student {
    std_id         Int         @id @default(autoincrement())
    std_name       String
    std_lastname   String
    std_nameEN     String
    std_lastnameEN String
    std_bd         DateTime    @db.Date
    std_address    String
    std_phone      String
    std_email      String
    img_profile    String
    std_identity   String
    std_yearIn     String
    std_grade      String
    std_school     String
    religion_other String
    nation_other   String
    nationality    nationality @relation(fields: [nation_id], references: [nation_id], onDelete: Cascade, onUpdate: Cascade)
    religion       religion    @relation(fields: [religion_id], references: [religion_id], onDelete: Cascade, onUpdate: Cascade)
    gender         gender      @relation(fields: [gender_id], references: [gender_id], onDelete: Cascade, onUpdate: Cascade)
    status         statustype  @default(W8)
    class          Class       @relation(fields: [classId], references: [class_id], onDelete: Cascade, onUpdate: Cascade)
    classId        Int         @map("class_id")
    major          major       @relation(fields: [majorId], references: [major_id], onDelete: Cascade, onUpdate: Cascade)
    majorId        Int         @map("major_id")
    user           user        @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
    user_id        Int
    gender_id      Int
    nation_id      Int
    religion_id    Int
}

model user {
    user_id       Int       @id @default(autoincrement())
    gender        gender    @relation(fields: [gender_id], references: [gender_id], onDelete: Cascade, onUpdate: Cascade)
    user_name     String
    user_lastname String
    user_email    String
    user_identity String
    user_password String
    user_role     Role      @default(STUDENT)
    student       student[]
    gender_id     Int
}
